{"version":3,"sources":["const.ts","services/token.ts","services/api.ts","store/root-reducer.ts","services/adapter.ts","utils/mocks.ts","store/data/data.ts","store/user-process/user-process.ts","store/store.ts","browser-history.ts","store/data/selectors.ts","components/page-logo/page-logo.tsx","store/user-process/selectors.ts","components/user-block/user-block.tsx","components/page-header/page-header.tsx","components/movie-card-preview/movie-card-preview.tsx","components/button-add/button-add.tsx","components/button-play/button-play.tsx","components/movie-card-info/movie-card-info.tsx","components/movie-card-big/movie-card-big.tsx","components/page-footer/page-footer.tsx","utils/filter.ts","components/button-more/button-more.tsx","components/video-player/video-player.tsx","components/movie-card-small/movie-card-small.tsx","components/movie-card-list/movie-card-list.tsx","components/genre-item/genre-item.tsx","components/genres-list/genres-list.tsx","components/catalog/catalog.tsx","components/loader/loader.tsx","components/root-screen/root-screen.tsx","components/login-message/login-message.tsx","components/login-screen/login-screen.tsx","components/movie-tab/movie-tab.tsx","components/movie-tabs/movie-tabs.tsx","utils/common.ts","components/movie-text/movie-text.tsx","components/movie-rating/movie-rating.tsx","components/review/review.tsx","components/reviews/reviews.tsx","components/movie-screen/movie-screen.tsx","components/mylist-screen/mylist-screen.tsx","components/review-star/review-star.tsx","components/add-review-screen/add-review-screen.tsx","components/player-screen/player-screen.tsx","components/app/app.tsx","index.tsx"],"names":["AppRoute","APIRoute","AUTH_TOKEN_KEY_NAME","api","axios","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","getToken","headers","createAPI","AuthorizationStatus","movieScreenTabs","NameSpace","FILTER_TYPE","ALL","ADVENTURES","COMEDIES","CRIME","DOCUMENTARY","DRAMAS","HORROR","KIDS","ROMANCE","THRILLERS","FANTASIES","adaptServerMovieToClient","movie","id","name","description","rating","director","starring","genre","released","posterImage","previewImage","backgroundImage","backgroundColor","videoLink","previewVideoLink","scoresCount","runTime","isFavorite","adaptServerAuthInfoToClient","authInfo","mockMovie","loadPoster","createAsyncThunk","a","get","Promo","data","loadMovies","Movies","loadSimilarMovies","loadFavoriteMovies","Favorite","loadMovie","loadComments","Comments","addReview","reviewData","post","changeFavoriteStatus","status","initialState","promo","movies","similarMovies","favoriteMovies","isMovieLoaded","comments","dataSlice","createSlice","reducers","resetMovie","state","extraReducers","builder","addCase","fulfilled","action","payload","map","pending","adaptedMovie","actions","checkAuthorizationStatus","Login","login","authorizationData","setItem","logout","delete","Logout","removeItem","authorizationStatus","NoAuth","Infinity","email","avatarUrl","userSlice","Unknown","Auth","rejected","rootReducer","combineReducers","Data","User","user","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","browserHistory","createBrowserHistory","selectMovies","selectSimilarMovies","selectFavoriteMovies","selectMovie","selectIsMovieLoaded","selectPromoMovie","selectComments","PageLogo","className","to","selectAuthorizationStatus","selectAuthInfo","UserBlock","useSelector","dispatch","useDispatch","onClick","push","MyList","src","alt","width","height","Root","then","toast","success","catch","error","message","PageHeader","children","cn","rootPage","myListPage","reviewPage","MovieCardPreview","previewUrl","previewAltText","bigSize","smallSize","ButtonAdd","onButtonClick","type","viewBox","xlinkHref","ButtonPlay","Player","MovieCardInfo","movieData","unwrapResult","MovieCardBig","autorizationStatus","promoMovie","PageFooter","filter","ButtonMore","VideoPlayer","poster","muted","autoPlay","MovieCardSmall","selectedMovieId","onMouseEnter","timerRef","useRef","useEffect","current","clearTimeout","setTimeout","onMouseLeave","Movie","MovieCardList","useState","setSelectedMovieId","GenreItem","selectedFilter","GenresList","onFilterChange","Object","values","Math","random","Catalog","movieCount","setMovieCount","setFilter","filteredMovies","setFilteredMovies","slice","length","Loader","RootScreen","LoginMessage","validateEmail","test","validatePassword","password","LoginScreen","setLogin","setPassword","setMessage","emailError","setEmailError","passwordError","setPasswordError","onSubmit","evt","preventDefault","toString","loginAction","goBack","noValidate","placeholder","value","onChange","target","htmlFor","MovieTab","tab","activeTab","path","MovieTabs","convertMinsToHrsMins","mins","h","floor","m","String","padStart","MovieText","detailsTab","style","whiteSpace","actor","index","array","calculateRating","MovieRating","Review","comment","date","Date","dateTime","getFullYear","getMonth","getDate","toLocaleString","day","year","month","Reviews","dividedComments","i","divideCommentsOnRow","row","color","MovieScreen","setMovieId","setActiveTab","useParams","item","location","pathname","MyListScreen","ReviewStar","count","selectedCount","isDisabled","checked","disabled","stars","AddReviewScreen","setRating","setComment","setDisabled","minLength","maxLength","PlayerScreen","player","ref","preload","controls","App","history","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b281697.chunk.js","sourcesContent":["export enum AppRoute {\n  Root = '/',\n  Login = '/login',\n  MyList = '/mylist',\n  Movie = '/films',\n  Player = '/player',\n  NotFound = '/404',\n  Review = '/review',\n  Dev = '/dev'\n}\n\nexport enum APIRoute {\n  Movies = '/films',\n  Comments = '/comments',\n  Login = '/login',\n  Logout = '/logout',\n  Promo = '/promo',\n  Favorite = '/favorite'\n}\n\nexport const movieScreenTabs = ['Overview', 'Details', 'Reviews'];\n\nexport enum AuthorizationStatus {\n  Unknown = 'UNKNOWN',\n  NoAuth = 'NO_AUTH',\n  Auth = 'AUTH',\n}\n\nexport const FILTER_TYPE = {\n  ALL: 'All genres',\n  ADVENTURES: 'Adventure',\n  COMEDIES: 'Comedy',\n  CRIME: 'Crime',\n  DOCUMENTARY: 'Documentary',\n  DRAMAS: 'Drama',\n  HORROR: 'Horror',\n  KIDS: 'Kids & Family',\n  ROMANCE: 'Romance',\n  THRILLERS: 'Thriller',\n  FANTASIES: 'Fantasy',\n};\n","const AUTH_TOKEN_KEY_NAME = 'what-to-watch-token';\n\nexport type Token = string;\n\nexport const getToken = (): Token => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY_NAME);\n\n  return token ?? '';\n};\n\nexport const saveToken = (token: Token): void => {\n  localStorage.setItem(AUTH_TOKEN_KEY_NAME, token);\n};\n\nexport const dropToken = (): void => {\n  localStorage.removeItem(AUTH_TOKEN_KEY_NAME);\n};\n","import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { getToken } from './token';\n\nconst BACKEND_URL = 'https://8.react.pages.academy/wtw';\nconst REQUEST_TIMEOUT = 5000;\n\nexport const createAPI = (): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n      const token = getToken();\n\n      if (token) {\n        config.headers['x-token'] = token;\n      }\n\n      return config;\n    },\n  );\n\n  return api;\n};\n\nexport const api = createAPI();\n","import { combineReducers } from 'redux';\nimport data from './data/data';\nimport user from './user-process/user-process';\n\nexport enum NameSpace {\n  Data = 'DATA',\n  User = 'USER',\n}\n\nexport const rootReducer = combineReducers({\n  [NameSpace.Data]: data,\n  [NameSpace.User]: user,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { Movie, MovieFromServer } from '../types/movie';\nimport { AuthInfo, AuthInfoFromServer } from '../types/auth';\n\nexport const adaptServerMovieToClient = (movie: MovieFromServer): Movie => ({\n  id: movie['id'],\n  name: movie['name'],\n  description: movie['description'],\n  rating: movie['rating'],\n  director: movie['director'],\n  starring: movie['starring'],\n  genre: movie['genre'],\n  released: movie['released'],\n  posterImage: movie['poster_image'],\n  previewImage: movie['preview_image'],\n  backgroundImage: movie['background_image'],\n  backgroundColor: movie['background_color'],\n  videoLink: movie['video_link'],\n  previewVideoLink: movie['preview_video_link'],\n  scoresCount: movie['scores_count'],\n  runTime: movie['run_time'],\n  isFavorite: movie['is_favorite'],\n});\n\nexport const adaptServerAuthInfoToClient = (authInfo: AuthInfoFromServer): AuthInfo => ({\n  'id': authInfo['id'],\n  'email': authInfo['email'],\n  'name': authInfo['name'],\n  'avatarUrl': authInfo['avatar_url'],\n  'token': authInfo['token'],\n});\n","import { Movie } from '../types/movie';\nimport { datatype, image, lorem, name, internet } from 'faker';\n\nexport const mockMovie = {\n  backgroundColor: '',\n  backgroundImage: '',\n  description: '',\n  genre: '',\n  id: -1,\n  isFavorite: false,\n  name: '',\n  posterImage: '',\n  previewImage: '',\n  previewVideoLink: '',\n  rating: 0,\n  released: 0,\n  runTime: 0,\n  scoresCount: 0,\n  director: '',\n  starring: [],\n  videoLink: '',\n};\n\nexport const createMockMovie = (): Movie => ({\n  'id': datatype.number(1000),\n  'name': lorem.sentence(),\n  'posterImage': image.imageUrl(),\n  'previewImage': image.imageUrl(),\n  'backgroundImage': image.imageUrl(),\n  'backgroundColor': '#AA0020',\n  'videoLink': internet.url(),\n  'previewVideoLink': image.imageUrl(),\n  'description': lorem.sentences(),\n  'rating': datatype.number(10),\n  'scoresCount': datatype.number(100000),\n  'director': `${name.findName()} ${name.lastName()}`,\n  'starring': new Array(datatype.number(5)).fill('').map(() => `${name.firstName()} ${name.lastName()}`),\n  'runTime': datatype.number(200),\n  'genre': lorem.word(),\n  'released': 2021,\n  'isFavorite': datatype.boolean(),\n});\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { api } from '../../services/api';\nimport { APIRoute } from '../../const';\nimport { MovieFromServer } from '../../types/movie';\nimport { Comment, CommentPost } from '../../types/comment';\nimport { Data } from '../../types/state';\nimport { adaptServerMovieToClient } from '../../services/adapter';\nimport { mockMovie } from '../../utils/mocks';\n\ntype ChangeFavoriteStatusParams = {\n  id: number,\n  status: number\n}\n\ntype AddReviewParams = {\n  id: number;\n  reviewData: CommentPost;\n}\n\nconst loadPoster = createAsyncThunk(\n  'data/loadPoster',\n  async () => {\n    const { data } = await api.get<MovieFromServer>(APIRoute.Promo);\n\n    return data;\n  },\n);\n\nconst loadMovies = createAsyncThunk(\n  'data/loadMovies',\n  async () => {\n    const { data } = await api.get<MovieFromServer[]>(APIRoute.Movies);\n\n    return data;\n  },\n);\n\nconst loadSimilarMovies = createAsyncThunk(\n  'data/loadSimilarMovies',\n  async (id: number) => {\n    const { data } = await api.get<MovieFromServer[]>(`${APIRoute.Movies}/${id}/similar`);\n\n    return data;\n  },\n);\n\nconst loadFavoriteMovies = createAsyncThunk(\n  'data/loadFavoriteMovies',\n  async () => {\n    const { data } = await api.get<MovieFromServer[]>(APIRoute.Favorite);\n\n    return data;\n  },\n);\n\nconst loadMovie = createAsyncThunk(\n  'data/loadMovie',\n  async (id: number) => {\n    const { data } = await api.get<MovieFromServer>(`${APIRoute.Movies}/${id}`);\n\n    return data;\n  },\n);\n\nconst loadComments = createAsyncThunk(\n  'data/loadComments',\n  async (id: number) => {\n    const { data } = await api.get<Comment[]>(`${APIRoute.Comments}/${id}`);\n\n    return data;\n  },\n);\n\nconst addReview = createAsyncThunk(\n  'data/addReview',\n  async ({id, reviewData}: AddReviewParams) => {\n    const { data } = await api.post(`${APIRoute.Comments}/${id}`, reviewData);\n\n    return data;\n  },\n);\n\nconst changeFavoriteStatus = createAsyncThunk(\n  'data/changeFavoriteStats',\n  async ({ id, status }: ChangeFavoriteStatusParams) => {\n    const { data } = await api.post<MovieFromServer>(`${APIRoute.Favorite}/${id}/${status}`);\n\n    return data;\n  },\n);\n\nconst initialState: Data = {\n  promo: mockMovie,\n  movies: [],\n  similarMovies: [],\n  favoriteMovies: [],\n  movie: mockMovie,\n  isMovieLoaded: false,\n  comments: [],\n};\n\nconst dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    resetMovie: (state) => {\n      state.movie = initialState.movie;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loadMovies.fulfilled, (state, action) => {\n        state.movies = action.payload.map((movie) => adaptServerMovieToClient(movie));\n      })\n      .addCase(loadSimilarMovies.fulfilled, (state, action) => {\n        state.similarMovies = action.payload.map((movie) => adaptServerMovieToClient(movie));\n      })\n      .addCase(loadFavoriteMovies.fulfilled, (state, action) => {\n        state.favoriteMovies = action.payload.map((movie) => adaptServerMovieToClient(movie));\n      })\n      .addCase(loadMovie.pending, (state) => {\n        state.isMovieLoaded = false;\n      })\n      .addCase(loadMovie.fulfilled, (state, action) => {\n        state.movie = adaptServerMovieToClient(action.payload);\n        state.isMovieLoaded = true;\n      })\n      .addCase(loadComments.fulfilled, (state, action) => {\n        state.comments = action.payload;\n      })\n      .addCase(addReview.fulfilled, (state, action) => {\n        state.comments = action.payload;\n      })\n      .addCase(loadPoster.fulfilled, (state, action) => {\n        state.promo = adaptServerMovieToClient(action.payload);\n      })\n      .addCase(changeFavoriteStatus.fulfilled, (state, action) => {\n        const adaptedMovie = adaptServerMovieToClient(action.payload);\n\n        state.movies = state.movies.map((movie) => {\n          if (movie.id === adaptedMovie.id) {\n            return adaptedMovie;\n          }\n\n          return movie;\n        });\n\n        if (state.promo.id === adaptedMovie.id) {\n          state.promo = adaptedMovie;\n        }\n\n        if (state.movie.id === adaptedMovie.id) {\n          state.movie = adaptedMovie;\n        }\n      });\n  },\n});\n\nexport const { resetMovie } = dataSlice.actions;\nexport { loadMovies, loadSimilarMovies, loadFavoriteMovies, loadMovie, loadComments, addReview, loadPoster, changeFavoriteStatus };\nexport default dataSlice.reducer;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { api } from '../../services/api';\nimport { APIRoute } from '../../const';\nimport { AuthorizationStatus } from '../../const';\nimport { UserProcess } from '../../types/state';\nimport { AuthInfoFromServer } from '../../types/auth';\nimport { adaptServerAuthInfoToClient } from '../../services/adapter';\nimport { saveToken, dropToken } from '../../services/token';\n\ntype LoginParams = {\n  email: string,\n  password: string,\n}\n\nconst checkAuthorizationStatus = createAsyncThunk(\n  'user/checkAuthorizationStatus',\n  async () => {\n    const { data } = await api.get<AuthInfoFromServer>(APIRoute.Login);\n\n    return data;\n  },\n);\n\nconst login = createAsyncThunk(\n  'user/login',\n  async (authorizationData: LoginParams) => {\n    const { data } = await api.post(APIRoute.Login, authorizationData);\n\n    saveToken(data.token);\n\n    return data;\n  },\n);\n\nconst logout = createAsyncThunk(\n  'user/logout',\n  async () => {\n    await api.delete(APIRoute.Logout);\n\n    dropToken();\n  },\n);\n\nconst initialState: UserProcess = {\n  authorizationStatus: AuthorizationStatus.NoAuth,\n  authInfo: {\n    id: Infinity,\n    name: '',\n    email: '',\n    token: '',\n    avatarUrl: '',\n  },\n};\n\nconst userSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(checkAuthorizationStatus.pending, (state) => {\n        state.authorizationStatus = AuthorizationStatus.Unknown;\n      })\n      .addCase(checkAuthorizationStatus.fulfilled, (state, action) => {\n        state.authorizationStatus = AuthorizationStatus.Auth;\n        state.authInfo = adaptServerAuthInfoToClient(action.payload);\n      })\n      .addCase(checkAuthorizationStatus.rejected, (state) => {\n        state.authorizationStatus = AuthorizationStatus.NoAuth;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.authorizationStatus = AuthorizationStatus.Auth;\n        state.authInfo = adaptServerAuthInfoToClient(action.payload);\n      })\n      .addCase(login.rejected, (state) => {\n        state.authorizationStatus = AuthorizationStatus.NoAuth;\n        state.authInfo = initialState.authInfo;\n      })\n      .addCase(logout.fulfilled, (state) => {\n        state.authorizationStatus = AuthorizationStatus.NoAuth;\n        state.authInfo = initialState.authInfo;\n      });\n  },\n});\n\nexport { checkAuthorizationStatus, login, logout };\nexport default userSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { api } from '../services/api';\nimport { rootReducer } from './root-reducer';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }),\n});\n\nexport type AppDispatch = typeof store.dispatch;\n","import { createBrowserHistory } from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import { State } from '../../types/state';\nimport { Movie } from '../../types/movie';\nimport { NameSpace } from '../root-reducer';\nimport { Comment } from '../../types/comment';\n\nexport const selectMovies = (state: State): Movie[] => state[NameSpace.Data].movies;\nexport const selectSimilarMovies = (state: State): Movie[] => state[NameSpace.Data].similarMovies;\nexport const selectFavoriteMovies = (state: State): Movie[] => state[NameSpace.Data].favoriteMovies;\nexport const selectMovie = (state: State): Movie => state[NameSpace.Data].movie;\nexport const selectIsMovieLoaded = (state: State): boolean => state[NameSpace.Data].isMovieLoaded;\nexport const selectPromoMovie = (state: State): Movie => state[NameSpace.Data].promo;\nexport const selectComments = (state: State): Comment[] => state[NameSpace.Data].comments;\n","import { Link } from 'react-router-dom';\n\nfunction PageLogo(): JSX.Element {\n  return (\n    <div className=\"logo\">\n      <Link to=\"/\" className=\"logo__link\">\n        <span className=\"logo__letter logo__letter--1\">W</span>\n        <span className=\"logo__letter logo__letter--2\">T</span>\n        <span className=\"logo__letter logo__letter--3\">W</span>\n      </Link>\n    </div>\n  );\n}\n\nexport default PageLogo;\n","import { NameSpace } from '../root-reducer';\nimport { AuthorizationStatus } from '../../const';\nimport { State } from '../../types/state';\nimport { AuthInfo } from '../../types/auth';\n\nexport const selectAuthorizationStatus = (state: State): AuthorizationStatus => state[NameSpace.User].authorizationStatus;\nexport const selectAuthInfo = (state: State): AuthInfo => state[NameSpace.User].authInfo;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport browserHistory from '../../browser-history';\nimport { AuthorizationStatus, AppRoute } from '../../const';\nimport { AppDispatch } from '../../store/store';\nimport { selectAuthInfo, selectAuthorizationStatus } from '../../store/user-process/selectors';\nimport { logout } from '../../store/user-process/user-process';\n\nfunction UserBlock(): JSX.Element {\n  const authorizationStatus = useSelector(selectAuthorizationStatus);\n  const { avatarUrl } = useSelector(selectAuthInfo);\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  const handleSignOutClick = () => {\n    dispatch(logout())\n      .then(() => toast.success('Вы успешно вышли из аккаунта.'))\n      .catch((error) => toast.error(error.message));\n  };\n\n  const handleAvatarClick = () => {\n    browserHistory.push(AppRoute.MyList);\n  };\n\n  if (authorizationStatus === AuthorizationStatus.Auth) {\n    return (\n      <ul className=\"user-block\">\n        <li className=\"user-block__item\">\n          <div className=\"user-block__avatar\" onClick={handleAvatarClick}>\n            <img src={avatarUrl} alt=\"User avatar\" width=\"63\" height=\"63\" />\n          </div>\n        </li>\n        <li className=\"user-block__item\">\n          <Link className=\"user-block__link\" to={AppRoute.Root} onClick={handleSignOutClick}>\n            Sign out\n          </Link>\n        </li>\n      </ul>\n    );\n  }\n\n  return (\n    <div className=\"user-block\">\n      <Link className=\"user-block__link\" to={AppRoute.Login}>\n        Sign in\n      </Link>\n    </div>\n  );\n}\n\nexport default UserBlock;\n","import cn from 'classnames';\nimport PageLogo from '../page-logo/page-logo';\nimport UserBlock from '../user-block/user-block';\n\ntype Props = {\n  config: {\n    rootPage: boolean;\n    myListPage: boolean;\n    reviewPage: boolean;\n  };\n  children?: JSX.Element;\n};\n\nfunction PageHeader({ config, children }: Props): JSX.Element {\n  return (\n    <header className={cn('page-header', { 'film-card__head': config.rootPage, 'user-page__head': config.myListPage })}>\n      <PageLogo />\n      {config.myListPage && <h1 className=\"page-title user-page__title\">My list</h1>}\n      {config.reviewPage && children}\n      <UserBlock />\n    </header>\n  );\n}\n\nexport default PageHeader;\n","import cn from 'classnames';\n\ntype Props = {\n  previewUrl: string;\n  previewAltText: string;\n  config: {\n    bigSize: boolean;\n    smallSize?: boolean;\n  };\n};\n\nfunction MovieCardPreview({ previewUrl, previewAltText, config }: Props): JSX.Element {\n  return (\n    <div className={cn('film-card__poster', { 'film-card__poster--big': config.bigSize, 'film-card__poster--small': config.smallSize })}>\n      <img src={previewUrl} alt={previewAltText} width=\"218\" height=\"327\" />\n    </div>\n  );\n}\n\nexport default MovieCardPreview;\n","type Props = {\n  isFavorite: boolean;\n  onButtonClick: () => void;\n};\n\nfunction ButtonAdd({ isFavorite, onButtonClick }: Props): JSX.Element {\n  return (\n    <button className=\"btn btn--list film-card__button\" type=\"button\" onClick={onButtonClick}>\n      <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n        <use xlinkHref={isFavorite ? '#in-list' : '#add'} />\n      </svg>\n      <span>My list</span>\n    </button>\n  );\n}\n\nexport default ButtonAdd;\n","import browserHistory from '../../browser-history';\nimport { AppRoute } from '../../const';\n\ntype Props = {\n  id: number;\n};\n\nfunction ButtonPlay({ id }: Props): JSX.Element {\n  const handlePlayButtonClick = () => {\n    browserHistory.push(`${AppRoute.Player}/${id}`);\n  };\n\n  return (\n    <button className=\"btn btn--play film-card__button\" type=\"button\" onClick={handlePlayButtonClick}>\n      <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n        <use xlinkHref=\"#play-s\" />\n      </svg>\n      <span>Play</span>\n    </button>\n  );\n}\n\nexport default ButtonPlay;\n","import { useDispatch } from 'react-redux';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { Movie } from '../../types/movie';\nimport MovieCardPoster from '../movie-card-preview/movie-card-preview';\nimport ButtonAdd from '../button-add/button-add';\nimport ButtonPlay from '../button-play/button-play';\nimport { AppDispatch } from '../../store/store';\nimport { changeFavoriteStatus } from '../../store/data/data';\nimport { toast } from 'react-toastify';\n\ntype Props = {\n  movieData: Movie;\n};\n\nfunction MovieCardInfo({ movieData }: Props): JSX.Element {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const handleButtonClick = () => {\n    const status = movieData.isFavorite ? 0 : 1;\n    const id = movieData.id;\n\n    dispatch(\n      changeFavoriteStatus({\n        id,\n        status,\n      }),\n    )\n      .then(unwrapResult)\n      .then((movie) => {\n        const message = movie['is_favorite']\n          ? 'Фильм был успешно добавлен в ваш список избранного'\n          : 'Фильм был успешно удален из вашего списка избранного';\n\n        toast.success(message);\n      })\n      .catch((error) => {\n        toast.error(error.message);\n      });\n  };\n\n  return (\n    <div className=\"film-card__info\">\n      <MovieCardPoster\n        previewUrl={movieData.posterImage}\n        previewAltText={movieData.name}\n        config={{\n          bigSize: false,\n        }}\n      />\n      <div className=\"film-card__desc\">\n        <h2 className=\"film-card__title\">{movieData.name}</h2>\n        <p className=\"film-card__meta\">\n          <span className=\"film-card__genre\">{movieData.genre}</span>\n          <span className=\"film-card__year\">{movieData.released}</span>\n        </p>\n        <div className=\"film-card__buttons\">\n          <ButtonPlay id={movieData.id} />\n          <ButtonAdd isFavorite={movieData.isFavorite} onButtonClick={handleButtonClick} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieCardInfo;\n","import { useSelector } from 'react-redux';\nimport PageHeader from '../page-header/page-header';\nimport MovieCardInfo from '../movie-card-info/movie-card-info';\nimport { selectPromoMovie } from '../../store/data/selectors';\nimport { selectAuthorizationStatus } from '../../store/user-process/selectors';\nimport { AuthorizationStatus } from '../../const';\n\nconst MOCK_BG_IMAGE = 'img/bg-header.jpg';\n\nfunction MovieCardBig(): JSX.Element {\n  const autorizationStatus = useSelector(selectAuthorizationStatus);\n  const promoMovie = useSelector(selectPromoMovie);\n\n  return (\n    <section className=\"film-card\">\n      <div className=\"film-card__bg\">\n        <img src={autorizationStatus === AuthorizationStatus.Auth ? promoMovie.backgroundImage : MOCK_BG_IMAGE} alt={promoMovie.name} />\n      </div>\n      <h1 className=\"visually-hidden\">WTW</h1>\n      <PageHeader config={{ rootPage: true, reviewPage: false, myListPage: false }} />\n      <div className=\"film-card__wrap\">\n        <MovieCardInfo movieData={promoMovie} />\n      </div>\n    </section>\n  );\n}\n\nexport default MovieCardBig;\n","import PageLogo from '../page-logo/page-logo';\n\nfunction PageFooter(): JSX.Element {\n  return (\n    <footer className=\"page-footer\">\n      <PageLogo />\n      <div className=\"copyright\">\n        <p>© 2019 What to watch Ltd.</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default PageFooter;\n","import { FILTER_TYPE } from '../const';\nimport { Movie } from '../types/movie';\n\nexport const filter = {\n  [FILTER_TYPE.ALL]: (movies: Movie[]): Movie[] => movies,\n  [FILTER_TYPE.ADVENTURES]: (movies: Movie[]): Movie[] => movies.filter((movie) => movie.genre === FILTER_TYPE.ADVENTURES),\n  [FILTER_TYPE.COMEDIES]: (movies: Movie[]): Movie[] => movies.filter((movie) => movie.genre === FILTER_TYPE.COMEDIES),\n  [FILTER_TYPE.CRIME]: (movies: Movie[]): Movie[] => movies.filter((movie) => movie.genre === FILTER_TYPE.CRIME),\n  [FILTER_TYPE.DOCUMENTARY]: (movies: Movie[]): Movie[] => movies.filter((movie) => movie.genre === FILTER_TYPE.DOCUMENTARY),\n  [FILTER_TYPE.DRAMAS]: (movies: Movie[]): Movie[] => movies.filter((movie) => movie.genre === FILTER_TYPE.DRAMAS),\n  [FILTER_TYPE.HORROR]: (movies: Movie[]): Movie[] => movies.filter((movie) => movie.genre === FILTER_TYPE.HORROR),\n  [FILTER_TYPE.KIDS]: (movies: Movie[]): Movie[] => movies.filter((movie) => movie.genre === FILTER_TYPE.KIDS),\n  [FILTER_TYPE.ROMANCE]: (movies: Movie[]): Movie[] => movies.filter((movie) => movie.genre === FILTER_TYPE.ROMANCE),\n  [FILTER_TYPE.THRILLERS]: (movies: Movie[]): Movie[] => movies.filter((movie) => movie.genre === FILTER_TYPE.THRILLERS),\n  [FILTER_TYPE.FANTASIES]: (movies: Movie[]): Movie[] => movies.filter((movie) => movie.genre === FILTER_TYPE.FANTASIES),\n};\n","type Props = {\n  onButtonClick: () => void;\n};\n\nfunction ButtonMore({ onButtonClick }: Props): JSX.Element {\n  return (\n    <button className=\"catalog__button\" type=\"button\" onClick={onButtonClick}>\n      Show more\n    </button>\n  );\n}\n\nexport default ButtonMore;\n","type Props = {\n  src: string;\n  previewImage: string;\n};\n\nfunction VideoPlayer({ src, previewImage }: Props): JSX.Element {\n  return <video src={src} className=\"player__video\" poster={previewImage} muted autoPlay></video>;\n}\n\nexport default VideoPlayer;\n","import { useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport { Movie } from '../../types/movie';\nimport browserHistory from '../../browser-history';\nimport VideoPlayer from '../video-player/video-player';\n\ntype Props = {\n  movie: Movie;\n  selectedMovieId: number;\n  onMouseEnter: (id: number) => void;\n};\n\nfunction MovieCardSmall({ movie, selectedMovieId, onMouseEnter }: Props): JSX.Element {\n  const timerRef = useRef<null | ReturnType<typeof setTimeout>>(null);\n\n  const handleImageClick = (): void => {\n    browserHistory.push(`${AppRoute.Movie}/${movie.id}`);\n  };\n\n  const handleMouseEnter = (): void => {\n    timerRef.current = setTimeout(() => {\n      onMouseEnter(movie.id);\n    }, 1000);\n  };\n\n  const handleMouseLeave = (): void => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n\n    onMouseEnter(-1);\n  };\n\n  useEffect(\n    () => () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n    },\n    [],\n  );\n\n  return (\n    <article className=\"small-film-card catalog__films-card\" onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n      <div className=\"small-film-card__image\" onClick={handleImageClick}>\n        {movie.id === selectedMovieId ? (\n          <VideoPlayer src={movie.previewVideoLink} previewImage={movie.previewImage} />\n        ) : (\n          <img src={movie.previewImage} alt={movie.name} width=\"280\" height=\"175\" />\n        )}\n      </div>\n      <h3 className=\"small-film-card__title\">\n        <Link className=\"small-film-card__link\" to={`${AppRoute.Movie}/${movie.id}`}>\n          {movie.name}\n        </Link>\n      </h3>\n    </article>\n  );\n}\n\nexport default MovieCardSmall;\n","import { useState } from 'react';\nimport { Movie } from '../../types/movie';\nimport MovieCardSmall from '../movie-card-small/movie-card-small';\n\ntype Props = {\n  movies: Movie[];\n};\n\nfunction MovieCardList({ movies }: Props): JSX.Element {\n  const [selectedMovieId, setSelectedMovieId] = useState(-1);\n\n  return (\n    <div className=\"catalog__films-list\">\n      {movies.map((movie) => (\n        <MovieCardSmall key={movie.id} movie={movie} selectedMovieId={selectedMovieId} onMouseEnter={setSelectedMovieId} />\n      ))}\n    </div>\n  );\n}\n\nexport default MovieCardList;\n","import { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport cn from 'classnames';\n\ntype Props = {\n  genre: string;\n  selectedFilter: string;\n  onButtonClick: (genre: string) => void;\n};\n\nfunction GenreItem({ genre, selectedFilter, onButtonClick }: Props): JSX.Element {\n  const handleButtonClick = () => {\n    onButtonClick(genre);\n  };\n\n  return (\n    <li className={cn('catalog__genres-item', { 'catalog__genres-item--active': genre === selectedFilter })}>\n      <Link className=\"catalog__genres-link\" to={AppRoute.Root} onClick={handleButtonClick}>\n        {genre}\n      </Link>\n    </li>\n  );\n}\n\nexport default GenreItem;\n","import { FILTER_TYPE } from '../../const';\nimport GenreItem from '../genre-item/genre-item';\n\ntype Props = {\n  selectedFilter: string;\n  onFilterChange: (activeFilter: string) => void;\n};\n\nfunction GenresList({ selectedFilter, onFilterChange }: Props): JSX.Element {\n  return (\n    <ul className=\"catalog__genres-list\">\n      {Object.values(FILTER_TYPE).map((genre) => (\n        <GenreItem key={`${genre}-${Math.random()}`} genre={genre} selectedFilter={selectedFilter} onButtonClick={onFilterChange} />\n      ))}\n    </ul>\n  );\n}\n\nexport default GenresList;\n","import { useEffect, useState } from 'react';\nimport { filter } from '../../utils/filter';\nimport { Movie } from '../../types/movie';\nimport ButtonMore from '../button-more/button-more';\nimport MovieCardList from '../movie-card-list/movie-card-list';\nimport GenresList from '../genres-list/genres-list';\nimport { FILTER_TYPE } from '../../const';\n\ntype Props = {\n  movies: Movie[];\n};\n\nconst STEP_INCREASE_COUNT = 8;\n\nfunction Catalog({ movies }: Props): JSX.Element {\n  const [movieCount, setMovieCount] = useState(STEP_INCREASE_COUNT);\n  const [selectedFilter, setFilter] = useState(FILTER_TYPE.ALL);\n  const [filteredMovies, setFilteredMovies] = useState(movies);\n\n  useEffect(() => {\n    setFilteredMovies(filter[selectedFilter](movies));\n    setMovieCount(STEP_INCREASE_COUNT);\n  }, [selectedFilter, movies]);\n\n  const handleShowMoreButtonClick = () => {\n    if (movieCount + STEP_INCREASE_COUNT >= filteredMovies.length) {\n      setMovieCount(filteredMovies.length);\n      return;\n    }\n\n    setMovieCount(movieCount + STEP_INCREASE_COUNT);\n  };\n\n  return (\n    <section className=\"catalog\">\n      <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n      <GenresList onFilterChange={setFilter} selectedFilter={selectedFilter} />\n      <MovieCardList movies={filteredMovies.slice(0, movieCount)} />\n      {movies.length > 0 && filteredMovies.length > movieCount && (\n        <div className=\"catalog__more\">\n          <ButtonMore onButtonClick={handleShowMoreButtonClick} />\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default Catalog;\n","function Loader(): JSX.Element {\n  return (\n    <div className=\"cssload-loader\">\n      <h2 className=\"visually-hidden\">Loader</h2>\n      <div className=\"cssload-inner cssload-one\" />\n      <div className=\"cssload-inner cssload-two\" />\n      <div className=\"cssload-inner cssload-three\" />\n    </div>\n  );\n}\n\nexport default Loader;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport { loadMovies, loadPoster } from '../../store/data/data';\nimport { selectMovies } from '../../store/data/selectors';\nimport { AppDispatch } from '../../store/store';\nimport MovieCardBig from '../movie-card-big/movie-card-big';\nimport PageFooter from '../page-footer/page-footer';\nimport Catalog from '../catalog/catalog';\nimport Loader from '../loader/loader';\n\nfunction RootScreen(): JSX.Element {\n  const movies = useSelector(selectMovies);\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  useEffect(() => {\n    dispatch(loadMovies())\n      .then(unwrapResult)\n      .catch((error) => toast.error(error.message));\n    dispatch(loadPoster())\n      .then(unwrapResult)\n      .catch((error) => toast.error(error.message));\n  }, [dispatch]);\n\n  if (!movies.length) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <MovieCardBig />\n      <div className=\"page-content\">\n        <Catalog movies={movies} />\n        <PageFooter />\n      </div>\n    </>\n  );\n}\n\nexport default RootScreen;\n","type Props = {\n  message: string;\n};\n\nfunction LoginMessage({ message }: Props): JSX.Element {\n  return (\n    <div className=\"sign-in__message\">\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default LoginMessage;\n","import { useState, ChangeEvent, FormEvent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login as loginAction } from '../../store/user-process/user-process';\nimport { AppDispatch } from '../../store/store';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport browserHistory from '../../browser-history';\nimport cn from 'classnames';\nimport PageLogo from '../page-logo/page-logo';\nimport PageFooter from '../page-footer/page-footer';\nimport LoginMessage from '../login-message/login-message';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { selectAuthorizationStatus } from '../../store/user-process/selectors';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst validateEmail = (email: string) => {\n  const pattern = /\\S+@\\S+\\.\\S+/;\n\n  return pattern.test(email);\n};\n\nconst validatePassword = (password: string) => {\n  const pattern = /^(?=.*[aA-zZ])(?=.*\\d)[aA-zZ\\d]{1,}$/;\n\n  return pattern.test(password);\n};\n\nfunction LoginScreen(): JSX.Element {\n  const authorizationStatus = useSelector(selectAuthorizationStatus);\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  if (authorizationStatus === AuthorizationStatus.Auth) {\n    return <Redirect to={AppRoute.Root} />;\n  }\n\n  const handleLoginInputChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    setLogin(evt.target.value);\n\n    if (emailError) {\n      setMessage('');\n      setEmailError(false);\n    }\n  };\n\n  const handlePasswordInputChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    setPassword(evt.target.value);\n\n    if (passwordError) {\n      setMessage('');\n      setPasswordError(false);\n    }\n  };\n\n  const handleFormSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    switch (true) {\n      case !validateEmail(login):\n        setMessage('Please enter a valid email address');\n        setEmailError(true);\n        return;\n      case !validatePassword(password):\n        setMessage('Please enter a valid password');\n        setPasswordError(true);\n        return;\n      case !validateEmail(login) && !validatePassword(password.toString()):\n        setMessage('We can’t recognize this email and password combination. Please try again.');\n        return;\n    }\n\n    dispatch(\n      loginAction({\n        email: login,\n        password,\n      }),\n    )\n      .then(unwrapResult)\n      .then(() => {\n        browserHistory.goBack();\n      })\n      .catch(() => toast.error('Не удалось войти в аккаунт'));\n  };\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <PageLogo />\n        <h1 className=\"page-title user-page__title\">Sign in</h1>\n      </header>\n      <div className=\"sign-in user-page__content\">\n        <form action=\"#\" className=\"sign-in__form\" onSubmit={handleFormSubmit} noValidate>\n          <LoginMessage message={message} />\n          <div className=\"sign-in__fields\">\n            <div className={cn('sign-in__field', { 'sign-in__field--error': emailError })}>\n              <input\n                className=\"sign-in__input\"\n                type=\"email\"\n                placeholder=\"Email address\"\n                name=\"user-email\"\n                id=\"user-email\"\n                value={login}\n                onChange={handleLoginInputChange}\n              />\n              <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-email\">\n                Email address\n              </label>\n            </div>\n            <div className={cn('sign-in__field', { 'sign-in__field--error': passwordError })}>\n              <input\n                className=\"sign-in__input\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"user-password\"\n                id=\"user-password\"\n                value={password}\n                onChange={handlePasswordInputChange}\n              />\n              <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-password\">\n                Password\n              </label>\n            </div>\n          </div>\n          <div className=\"sign-in__submit\">\n            <button className=\"sign-in__btn\" type=\"submit\">\n              Sign in\n            </button>\n          </div>\n        </form>\n      </div>\n      <PageFooter />\n    </div>\n  );\n}\n\nexport default LoginScreen;\n","import { MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  path: string;\n  tab: string;\n  activeTab: string;\n  onClick: (tab: string) => void;\n};\n\nfunction MovieTab({ tab, activeTab, path, onClick }: Props): JSX.Element {\n  const handleTabClick = (evt: MouseEvent<HTMLAnchorElement>) => {\n    evt.preventDefault();\n\n    onClick(tab);\n  };\n\n  return (\n    <li className={cn('film-nav__item', { 'film-nav__item--active': activeTab === tab })}>\n      <Link to=\"#\" className=\"film-nav__link\" onClick={handleTabClick}>\n        {tab}\n      </Link>\n    </li>\n  );\n}\n\nexport default MovieTab;\n","import { movieScreenTabs } from '../../const';\nimport MovieTab from '../movie-tab/movie-tab';\n\ntype Props = {\n  activeTab: string;\n  onClick: (tab: string) => void;\n  path: string;\n};\n\nfunction MovieTabs({ activeTab, onClick, path }: Props): JSX.Element {\n  return (\n    <nav className=\"film-nav film-card__nav\">\n      <ul className=\"film-nav__list\">\n        {movieScreenTabs.map((tab) => (\n          <MovieTab key={tab} tab={tab} activeTab={activeTab} path={path} onClick={onClick} />\n        ))}\n      </ul>\n    </nav>\n  );\n}\n\nexport default MovieTabs;\n","export const convertMinsToHrsMins = (mins: number): string => {\n  const h = Math.floor(mins / 60);\n  const m = mins % 60;\n\n  String(h).padStart(2, '0');\n  String(m).padStart(2, '0');\n\n  return `${h}h ${m}m`;\n};\n\n","import { Movie } from '../../types/movie';\nimport { convertMinsToHrsMins } from '../../utils/common';\nimport cn from 'classnames';\n\ntype Props = {\n  movie: Movie;\n  config: {\n    detailsTab: boolean;\n  };\n};\n\nfunction MovieText({ movie, config }: Props): JSX.Element {\n  return (\n    <div className={cn('film-card__text', { 'film-card__row': config.detailsTab })}>\n      {!config.detailsTab ? (\n        <>\n          <p>{movie.description}</p>\n          <p className=\"film-card__director\">\n            <strong>Director: {movie.director}</strong>\n          </p>\n          <p className=\"film-card__starring\">\n            <strong>Starring: {movie.starring.map((actor) => `${actor}, `)} and other</strong>\n          </p>\n        </>\n      ) : (\n        <>\n          <div className=\"film-card__text-col\">\n            <p className=\"film-card__details-item\">\n              <strong className=\"film-card__details-name\">Director</strong>\n              <span className=\"film-card__details-value\">{movie.director}</span>\n            </p>\n            <p className=\"film-card__details-item\">\n              <strong className=\"film-card__details-name\">Starring</strong>\n              <span className=\"film-card__details-value\" style={{ whiteSpace: 'pre' }}>\n                {movie.starring.map((actor, index, array) => (index === array.length - 1 ? actor : `${actor},  \\n`))}\n              </span>\n            </p>\n          </div>\n          <div className=\"film-card__text-col\">\n            <p className=\"film-card__details-item\">\n              <strong className=\"film-card__details-name\">Run Time</strong>\n              <span className=\"film-card__details-value\">{convertMinsToHrsMins(movie.runTime)}</span>\n            </p>\n            <p className=\"film-card__details-item\">\n              <strong className=\"film-card__details-name\">Genre</strong>\n              <span className=\"film-card__details-value\">{movie.genre}</span>\n            </p>\n            <p className=\"film-card__details-item\">\n              <strong className=\"film-card__details-name\">Released</strong>\n              <span className=\"film-card__details-value\">{movie.released}</span>\n            </p>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default MovieText;\n","import { Movie } from '../../types/movie';\n\ntype Props = {\n  movie: Movie;\n};\n\nconst calculateRating = (rating: number) => {\n  switch (true) {\n    case rating > 0 && rating < 3:\n      return 'Bad';\n    case rating >= 3 && rating < 8:\n      return 'Normal';\n    case rating >= 8 && rating < 10:\n      return 'Very good';\n    case rating >= 10:\n      return 'Awesome';\n  }\n};\n\n// от 0 до 3 — Bad.\n// от 3 до 5 — Normal.\n// от 5 до 8 — Good.\n// от 8 до 10 — Very good.\n// 10 — Awesome.\n\nfunction MovieRating({ movie }: Props): JSX.Element {\n  return (\n    <div className=\"film-rating\">\n      <div className=\"film-rating__score\">{movie.rating}</div>\n      <p className=\"film-rating__meta\">\n        <span className=\"film-rating__level\">{calculateRating(movie.rating)}</span>\n        <span className=\"film-rating__count\">{movie.scoresCount} ratings</span>\n      </p>\n    </div>\n  );\n}\n\nexport default MovieRating;\n","import { Comment } from '../../types/comment';\n\ntype Props = {\n  comment: Comment;\n};\n\nfunction Review({ comment }: Props): JSX.Element {\n  const date = new Date(comment.date);\n  const dateOptions = { day: 'numeric' as const, year: 'numeric' as const, month: 'long' as const };\n  const dateTime = `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`;\n\n  return (\n    <div className=\"review\">\n      <blockquote className=\"review__quote\">\n        <p className=\"review__text\">{comment.comment}</p>\n        <footer className=\"review__details\">\n          <cite className=\"review__author\">{comment.user.name}</cite>\n          <time className=\"review__date\" dateTime={dateTime}>\n            {date.toLocaleString('en-US', dateOptions)}\n          </time>\n        </footer>\n      </blockquote>\n      <div className=\"review__rating\">{comment.rating}</div>\n    </div>\n  );\n}\n\nexport default Review;\n","import { Comment } from '../../types/comment';\nimport Review from '../review/review';\n\ntype Props = {\n  comments: Comment[];\n};\n\nconst divideCommentsOnRow = (comments: Comment[]) => {\n  if (comments.length < 3) {\n    return [[...comments]];\n  }\n\n  const dividedComments = [];\n\n  for (let i = 0; i < comments.length; i += 3) {\n    dividedComments.push(comments.slice(i, i + 3));\n  }\n\n  return dividedComments;\n};\n\nfunction Reviews({ comments }: Props): JSX.Element {\n  const dividedComments = divideCommentsOnRow(comments);\n\n  if (!comments.length) {\n    return <p style={{ color: 'black' }}>No reviews yet.</p>;\n  }\n\n  return (\n    <div className=\"film-card__reviews film-card__row\">\n      {dividedComments.map((row) => (\n        <div className=\"film-card__reviews-col\" key={`col-${Math.random()}`}>\n          {row.map((comment) => (\n            <Review key={comment.id} comment={comment} />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Reviews;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { AppDispatch } from '../../store/store';\nimport { loadMovie, loadComments, loadSimilarMovies, changeFavoriteStatus } from '../../store/data/data';\nimport { selectComments, selectMovie, selectSimilarMovies, selectIsMovieLoaded } from '../../store/data/selectors';\nimport MovieCardSmall from '../movie-card-small/movie-card-small';\nimport { toast } from 'react-toastify';\nimport PageHeader from '../page-header/page-header';\nimport MovieCardPreview from '../movie-card-preview/movie-card-preview';\nimport MovieTabs from '../movie-tabs/movie-tabs';\nimport MovieText from '../movie-text/movie-text';\nimport MovieRating from '../movie-rating/movie-rating';\nimport ButtonAdd from '../button-add/button-add';\nimport ButtonPlay from '../button-play/button-play';\nimport Loader from '../loader/loader';\nimport Reviews from '../reviews/reviews';\nimport PageFooter from '../page-footer/page-footer';\nimport browserHistory from '../../browser-history';\nimport { selectAuthorizationStatus } from '../../store/user-process/selectors';\n\nfunction MovieScreen(): JSX.Element {\n  const authorizationStatus = useSelector(selectAuthorizationStatus);\n  const movie = useSelector(selectMovie);\n  const similarMovies = useSelector(selectSimilarMovies);\n  const isMovieLoaded = useSelector(selectIsMovieLoaded);\n  const comments = useSelector(selectComments);\n  const [selectedMovieId, setMovieId] = useState(-1);\n  const [activeTab, setActiveTab] = useState('Overview');\n  const { id } = useParams<{ id: string }>();\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  useEffect(() => {\n    dispatch(loadMovie(+id));\n    dispatch(loadSimilarMovies(+id)).catch(() => {\n      toast.error('Не удалось загрузить список похожих фильмов.');\n    });\n    dispatch(loadComments(+id)).catch(() => {\n      toast.error('Не удалось загрузить отзывы.');\n    });\n  }, [id, dispatch]);\n\n  const handleFavoriteButtonClick = () => {\n    dispatch(\n      changeFavoriteStatus({\n        id: movie.id,\n        status: movie.isFavorite ? 0 : 1,\n      }),\n    )\n      .then(unwrapResult)\n      .then((item) => {\n        const message = item['is_favorite']\n          ? 'Фильм был успешно добавлен в ваш список избранного'\n          : 'Фильм был успешно удален из вашего списка избранного';\n\n        toast.success(message);\n      })\n      .catch((error) => {\n        toast.error(error.message);\n      });\n  };\n\n  if (!isMovieLoaded) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <section className=\"film-card film-card--full\">\n        <div className=\"film-card__hero\">\n          <div className=\"film-card__bg\">\n            <img src={movie.backgroundImage} alt={movie.name} />\n          </div>\n          <h1 className=\"visually-hidden\">WTW</h1>\n          <PageHeader config={{ myListPage: false, reviewPage: false, rootPage: true }} />\n          <div className=\"film-card__wrap\">\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{movie.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{movie.genre}</span>\n                <span className=\"film-card__year\">{movie.released}</span>\n              </p>\n              <div className=\"film-card__buttons\">\n                <ButtonPlay id={movie.id} />\n                <ButtonAdd isFavorite={movie.isFavorite} onButtonClick={handleFavoriteButtonClick} />\n                {authorizationStatus === AuthorizationStatus.Auth && (\n                  <Link className=\"btn film-card__button\" to={`${browserHistory.location.pathname}${AppRoute.Review}`}>\n                    Add review\n                  </Link>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"film-card__wrap film-card__translate-top\">\n          <div className=\"film-card__info\">\n            <MovieCardPreview previewUrl={movie.posterImage} previewAltText={movie.name} config={{ bigSize: true }} />\n            <div className=\"film-card__desc\">\n              <MovieTabs activeTab={activeTab} onClick={setActiveTab} path=\"/films/1\" />\n              {activeTab === 'Overview' && (\n                <>\n                  <MovieRating movie={movie} />\n                  <MovieText movie={movie} config={{ detailsTab: false }} />\n                </>\n              )}\n              {activeTab === 'Details' && <MovieText movie={movie} config={{ detailsTab: true }} />}\n              {activeTab === 'Reviews' && <Reviews comments={comments} />}\n            </div>\n          </div>\n        </div>\n      </section>\n      <div className=\"page-content\">\n        <section className=\"catalog catalog--like-this\">\n          <h2 className=\"catalog__title\">More like this</h2>\n          <div className=\"catalog__films-list\">\n            {similarMovies.map((item) => (\n              <MovieCardSmall key={item.id} movie={item} selectedMovieId={selectedMovieId} onMouseEnter={setMovieId} />\n            ))}\n          </div>\n        </section>\n        <PageFooter />\n      </div>\n    </>\n  );\n}\n\nexport default MovieScreen;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport browserHistory from '../../browser-history';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { loadFavoriteMovies } from '../../store/data/data';\nimport { selectFavoriteMovies } from '../../store/data/selectors';\nimport { AppDispatch } from '../../store/store';\nimport { selectAuthorizationStatus } from '../../store/user-process/selectors';\nimport PageHeader from '../page-header/page-header';\nimport MovieCardSmall from '../movie-card-small/movie-card-small';\nimport PageFooter from '../page-footer/page-footer';\n\nfunction MyListScreen(): JSX.Element {\n  const authorizationStatus = useSelector(selectAuthorizationStatus);\n  const favoriteMovies = useSelector(selectFavoriteMovies);\n  const [selectedMovieId, setMovieId] = useState(-1);\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  useEffect(() => {\n    dispatch(loadFavoriteMovies());\n  }, [dispatch]);\n\n  if (authorizationStatus !== AuthorizationStatus.Auth) {\n    browserHistory.push(AppRoute.Login);\n  }\n\n  return (\n    <div className=\"user-page\">\n      <PageHeader config={{ myListPage: true, rootPage: false, reviewPage: false }} />\n      <section className=\"catalog\">\n        <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n        <div className=\"catalog__films-list\">\n          {favoriteMovies.map((movie) => (\n            <MovieCardSmall key={movie.id} selectedMovieId={selectedMovieId} onMouseEnter={setMovieId} movie={movie} />\n          ))}\n        </div>\n      </section>\n      <PageFooter />\n    </div>\n  );\n}\n\nexport default MyListScreen;\n","type Props = {\n  count: number;\n  selectedCount: number;\n  isDisabled: boolean;\n  onChange: (value: number) => void;\n};\n\nfunction ReviewStar({ count, selectedCount, isDisabled, onChange }: Props): JSX.Element {\n  const handleRadioChange = () => {\n    onChange(count);\n  };\n\n  return (\n    <>\n      <input\n        className=\"rating__input\"\n        id={`star-${count}`}\n        type=\"radio\"\n        name=\"rating\"\n        value={count}\n        checked={selectedCount === count}\n        onChange={handleRadioChange}\n        disabled={isDisabled}\n      />\n      <label className=\"rating__label\" htmlFor={`star-${count}`}>\n        Rating {count}\n      </label>\n    </>\n  );\n}\n\nexport default ReviewStar;\n","import { useState, MouseEvent, ChangeEvent, FormEvent } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { AuthorizationStatus } from '../../const';\nimport browserHistory from '../../browser-history';\nimport { AppRoute } from '../../const';\nimport { AppDispatch } from '../../store/store';\nimport { selectAuthorizationStatus } from '../../store/user-process/selectors';\nimport { selectMovie } from '../../store/data/selectors';\nimport { addReview } from '../../store/data/data';\nimport PageHeader from '../page-header/page-header';\nimport MovieCardPreview from '../movie-card-preview/movie-card-preview';\nimport ReviewStar from '../review-star/review-star';\nimport { toast } from 'react-toastify';\nimport { CommentPost } from '../../types/comment';\nimport { unwrapResult } from '@reduxjs/toolkit';\n\nconst stars = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n\nfunction AddReviewScreen(): JSX.Element {\n  const authorizationStatus = useSelector(selectAuthorizationStatus);\n  const movie = useSelector(selectMovie);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const [isDisabled, setDisabled] = useState(false);\n  const { id } = useParams<{ id: string }>();\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  if (authorizationStatus !== AuthorizationStatus.Auth) {\n    browserHistory.push(AppRoute.Login);\n  }\n\n  const handleGoBackButtonClick = (evt: MouseEvent<HTMLAnchorElement>) => {\n    evt.preventDefault();\n\n    browserHistory.goBack();\n  };\n\n  const handleCommentChange = (evt: ChangeEvent<HTMLTextAreaElement>) => {\n    setComment(evt.target.value);\n  };\n\n  const handleFormSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    setDisabled(true);\n\n    const reviewData: CommentPost = {\n      rating,\n      comment,\n    };\n\n    dispatch(addReview({ id: +id, reviewData }))\n      .then(unwrapResult)\n      .then(() => {\n        toast.success('Ваш отзыв был успешно добавлен.');\n\n        setDisabled(false);\n\n        browserHistory.goBack();\n      })\n      .catch(() => {\n        toast.error('При отправке отзыва, возникла ошибка.');\n\n        setDisabled(false);\n      });\n  };\n\n  return (\n    <section className=\"film-card film-card--full\">\n      <div className=\"film-card__header\">\n        <div className=\"film-card__bg\">\n          <img src={movie.backgroundImage} alt={movie.name} />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n        <PageHeader config={{ myListPage: false, reviewPage: true, rootPage: false }}>\n          <nav className=\"breadcrumbs\">\n            <ul className=\"breadcrumbs__list\">\n              <li className=\"breadcrumbs__item\">\n                <Link to=\"#\" className=\"breadcrumbs__link\" onClick={handleGoBackButtonClick}>\n                  {movie.name}\n                </Link>\n              </li>\n              <li className=\"breadcrumbs__item\">\n                <Link to=\"#\" className=\"breadcrumbs__link\">\n                  Add review\n                </Link>\n              </li>\n            </ul>\n          </nav>\n        </PageHeader>\n        <MovieCardPreview previewUrl={movie.posterImage} previewAltText={movie.name} config={{ bigSize: false, smallSize: true }} />\n      </div>\n\n      <div className=\"add-review\">\n        <form action=\"#\" className=\"add-review__form\" onSubmit={handleFormSubmit}>\n          <div className=\"rating\">\n            <div className=\"rating__stars\">\n              {stars.map((value) => (\n                <ReviewStar key={value} count={value} selectedCount={rating} onChange={setRating} isDisabled={isDisabled} />\n              ))}\n            </div>\n          </div>\n          <div className=\"add-review__text\">\n            <textarea\n              className=\"add-review__textarea\"\n              name=\"review-text\"\n              id=\"review-text\"\n              placeholder=\"Review text\"\n              minLength={50}\n              maxLength={400}\n              value={comment}\n              onChange={handleCommentChange}\n              disabled={isDisabled}\n            />\n            <div className=\"add-review__submit\">\n              <button className=\"add-review__btn\" type=\"submit\" disabled={comment.length < 50 || rating === 0 || isDisabled}>\n                Post\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default AddReviewScreen;\n","import { useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport browserHistory from '../../browser-history';\nimport { selectMovie } from '../../store/data/selectors';\n\nfunction PlayerScreen(): JSX.Element {\n  const movie = useSelector(selectMovie);\n  const player = useRef<HTMLVideoElement>(null);\n\n  const handleExitButtonClick = () => {\n    browserHistory.goBack();\n  };\n\n  return (\n    <div className=\"player\">\n      <video src={movie.videoLink} className=\"player__video\" poster={movie.backgroundImage} ref={player} preload=\"metadata\" controls></video>\n\n      <button type=\"button\" className=\"player__exit\" onClick={handleExitButtonClick}>\n        Exit\n      </button>\n    </div>\n  );\n}\n\nexport default PlayerScreen;\n","import { Router, Switch, Route } from 'react-router-dom';\nimport browserHistory from '../../browser-history';\nimport { AppRoute } from '../../const';\nimport RootScreen from '../root-screen/root-screen';\nimport LoginScreen from '../login-screen/login-screen';\nimport MovieScreen from '../movie-screen/movie-screen';\nimport MyListScreen from '../mylist-screen/mylist-screen';\nimport AddReviewScreen from '../add-review-screen/add-review-screen';\nimport PlayerScreen from '../player-screen/player-screen';\n\nfunction App(): JSX.Element {\n  return (\n    <Router history={browserHistory}>\n      <Switch>\n        <Route path={AppRoute.Root} exact>\n          <RootScreen />\n        </Route>\n        <Route path={AppRoute.Login} exact>\n          <LoginScreen />\n        </Route>\n        <Route path={`${AppRoute.Movie}/:id`} exact>\n          <MovieScreen />\n        </Route>\n        <Route path={AppRoute.MyList} exact>\n          <MyListScreen />\n        </Route>\n        <Route path={`${AppRoute.Movie}/:id${AppRoute.Review}`} exact>\n          <AddReviewScreen />\n        </Route>\n        <Route path={`${AppRoute.Player}/:id`} exact>\n          <PlayerScreen />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { checkAuthorizationStatus } from './store/user-process/user-process';\nimport App from './components/app/app';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nstore.dispatch(checkAuthorizationStatus()).then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n        <ToastContainer />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n  );\n});\n"],"sourceRoot":""}